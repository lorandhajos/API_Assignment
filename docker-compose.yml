version: '3.8'

services:
  nginx:
    image: nginx:latest
    ports:
      - ${NGINX_PORT}:80
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - api

  api:
    build: ./src
    command: gunicorn --bind 0.0.0.0:5000 -w 6 -c conf.py wsgi:application
    volumes:
      - ./src:/usr/src/app
    expose:
      - 5000
    environment:
      - API_VERSION=${API_VERSION}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - SECRET_KEY=${SECRET_KEY}
      - RANDOM_API_KEY=${RANDOM_API_KEY}
      - FLASK_ENV=${FLASK_ENV}
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - ./dataset:/docker-entrypoint-initdb.d
    restart: always
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 1s
      timeout: 5s
      retries: 10
    ports:
      - 5432:5432

  adminer:
    image: adminer
    restart: always
    ports:
      - ${ADMINER_PORT}:8080

volumes:
  postgres_data:
